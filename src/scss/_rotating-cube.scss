.button {
  border: 1px solid $color-black;
  padding: 5px 10px;
  font-size: 1em;
  outline: none;
  background: #fff;
  border-radius: 3px;

  &:hover {
    background: #ccc;
  }
}

section {
  width: 50%;
}

// .is-hidden {
//   display: none !important;
// }

.scenes {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
}
.scene {
  perspective: 600px;
  margin: 20px;
}

.shapes {
  display: flex;
  flex-wrap: wrap;
}
.shape {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
  transition: transform 2s;
}

.face {
  position: absolute;
  border: 2px solid #000;

  &::before {
    position: absolute;
    content: attr(data-index);
    font-size: 30px;
    display: block;
    padding: 10px 20px;
  }
}

.x1 {
  background: $color-pink;
}
.x2 {
  background: $color-pink-light;
}
.y1 {
  background: $color-yellow;
}
.y2 {
  background: $color-yellow-light;
}
.z1 {
  background: $color-cyan;
}
.z2 {
  background: $color-cyan-light;
}

.cube {
  $size: 200px;

  width: $size;
  height: $size;

  .face {
    width: $size;
    height: $size;
  }

  .x1 {
    transform: rotateY(0deg) translateZ($size/2);
  }
  .x2 {
    transform: rotateY(180deg) translateZ($size/2);
  }
  .y1 {
    transform: rotateY(90deg) translateZ($size/2);
  }
  .y2 {
    transform: rotateY(-90deg) translateZ($size/2);
  }
  .z1 {
    transform: rotateX(90deg) translateZ($size/2);
  }
  .z2 {
    transform: rotateX(-90deg) translateZ($size/2);
  }

// $color-red: red;
// $color-blue: blue;
// $color-red: red;

// .axis-x {
//   border-color: $color-red;
//   border-top-color: $color-blue;
//   border-bottom-color: $color-blue;
// }
// .axis-y {
//   border-color: $color-red;
//   border-top-color: $color-green;
//   border-bottom-color: $color-green;
// }
// .axis-z {
//   border-color: $color-green;
//   border-top-color: $color-blue;
//   border-bottom-color: $color-blue;
// }
}
.scroll {
    // overflow: auto;
  }

  @mixin rotate($x, $y, $z) {
    transform: rotateX(#{$x}deg) rotateY(#{$y}deg) rotateZ(#{$z}deg);
  }

  .cuboid {
    $width: 200px;
    $height: 260px;
    $depth: 110px;

    width: $width;
    height: $height;

    .axis-x {
      width: $width;
      height: $height;
    }
    .axis-y {
      width: $depth;
      height: $height;
    }
    .axis-z {
      width: $width;
      height: $depth;
    }

    .x1 {
      transform: rotateY(0deg) translateZ($depth/2);
    }
    .x2 {
      transform: rotateY(180deg) translateZ($depth/2);
    }
    .y1 {
      transform: rotateY(90deg) translateZ($width - $depth/2);
    }
    .y2 {
      transform: rotateY(-90deg) translateZ($depth/2);
    }
    .z1 {
      transform: rotateX(90deg) translateZ($depth/2);
    }
    .z2 {
      transform: rotateX(-90deg) translateZ($height - $depth/2);
    }
  }

  .pyramid {
    $size: 200px;
    transform: translateX(-$size/2);

    .wall {
      transform-origin: 50% 0%;
      border-top: 0;
      border-left: $size/2 solid transparent;
      border-right: $size/2 solid transparent;
      border-bottom: $size solid;
      background: transparent;

      &::before {
        bottom: -$size;
      }

      &::after {
        content: '';
        position: absolute;
        width: 220px;
        height: 2px;
        background: #000;
        display: block;
        transform: rotateZ(60deg) translate3d(0, 20px, 0);
      }

    }

    .x1 {
      border-bottom-color: $color-pink;
      transform: rotateX(-30deg);

    }
    .x2 {
      border-bottom-color: $color-pink-light;
      transform: rotateX(30deg);
    }
    .y1 {
      border-bottom-color: $color-yellow;
      transform: rotate(-30deg) rotateY(90deg);
    }
    .y2 {
      border-bottom-color: $color-yellow-light;
      transform: rotate(30deg) rotateY(90deg);
    }

    .base {
      width: $size;
      height: $size;
      transform: rotateX(-90deg) translateZ(74px);
    }

  }

  .circle {
    border-radius: 50%;
  }

  .user-input {
    padding: 5px;
    font-size: larger;
    vertical-align: middle;

    &[type='range'] {
      width: 200px;
    }
    &[type='tel'] {
      width: 3em;
      text-align: center;
    }
  }

  .cube-image {
    width: 100px;
  }

  label {
    display: inline-block;
    margin-right: 30px;
  }

  .material-icons {
    vertical-align: middle;
  }

  .slider-controlls {
    .material-icons {
      font-size: 50px;
    }
  }



  .button-controlls {

    table {
      margin: auto;
    }

    td {
      text-align: center;
    }

    $size: 50px;
    button {
      width: $size;
      height: $size;
    }
  }

  .start-point,
  .end-point {
    display: inline-block;
  }

  .end-point {
    margin-left: 100px;
  }

  .icon-top-left {
    transform: rotateZ(-45deg);
  }
  .icon-top-right {
    transform: rotateZ(45deg);
  }
  .icon-bottom-left {
    transform: rotateZ(-135deg);
  }
  .icon-bottom-right {
    transform: rotateZ(135deg);
  }

  fieldset .material-icons {
    font-size: 30px;
  }

.lines {
  position: relative;
  display: flex;
  margin: 20px -20px -1700px;
}

.section-angles .scenes::before {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 1450px;
  height: 1px;
  margin: auto;
  content: '';
  display: block;
  background: #000;
}

.line {
  width: 1px;
  height: 1700px;
  margin: auto;
  background: #000;
}


// [data-shape='cube'] {
//   .lines {
//     margin-bottom: -1800px;
//   }
//   .line {
//     height: 1800px;
//   }
// }

[data-shape='cube'] {
  $size: 80px;

  .shape {
    width: $size;
    height: $size;
  }

  .face {
    width: $size;
    height: $size;
  }

  .x1 {
    transform: rotateY(0deg) translateZ($size/2);
  }
  .x2 {
    transform: rotateY(180deg) translateZ($size/2);
  }
  .y1 {
    transform: rotateY(90deg) translateZ($size/2);
  }
  .y2 {
    transform: rotateY(-90deg) translateZ($size/2);
  }
  .z1 {
    transform: rotateX(90deg) translateZ($size/2);
  }
  .z2 {
    transform: rotateX(-90deg) translateZ($size/2);
  }
}

[data-shape='cuboid'] {
  $width: 80px;
  $height: 110px;
  $depth: 70px;

  .shape {
    width: $width;
    height: $height;
  }

  .axis-x {
    width: $width;
    height: $height;
  }
  .axis-y {
    width: $depth;
    height: $height;
  }
  .axis-z {
    width: $width;
    height: $depth;
  }

  .x1 {
    transform: rotateY(0deg) translateZ($depth/2);
  }
  .x2 {
    transform: rotateY(180deg) translateZ($depth/2);
  }
  .y1 {
    transform: rotateY(90deg) translateZ($width - $depth/2);
  }
  .y2 {
    transform: rotateY(-90deg) translateZ($depth/2);
  }
  .z1 {
    transform: rotateX(90deg) translateZ($depth/2);
  }
  .z2 {
    transform: rotateX(-90deg) translateZ($height - $depth/2);
  }
}


.section-angles {
  width: 100%;

  .face {
    &::before {
      font-size: 20px;
    }
  }

  .scene {
    margin: 40px;
  }
  &[data-shape='cube'] .scene {
    margin: 55px 40px;
  }

  .scenes {
    flex-wrap: nowrap;
    position: relative;
  }
}


$angle: 180/8;

[data-axis='y'] {
  @for $i from 1 through 9 {
    $z: ($i - 1) * $angle;

    .scenes:nth-of-type(#{$i}) .scene {

      @for $j from 1 through 9 {
        $y: ($j - 1) * $angle;
        $x: 0;

        &:nth-of-type(#{$j}) .shape {
          @include rotate($x, $y, $z);
        }

      }

    }
  }
}

[data-axis='z'] {
  @for $i from 1 through 9 {
    $x: ($i - 1) * $angle;

    .scenes:nth-of-type(#{$i}) .scene {

      @for $j from 1 through 9 {
        $z: ($j - 1) * $angle;
        $y: 0;

        &:nth-of-type(#{$j}) .shape {
          @include rotate($x, $y, $z);
        }

      }

    }
  }
}


[data-axis='x'] {
  @for $i from 1 through 9 {
    $x: ($i - 1) * $angle;

    .scenes:nth-of-type(#{$i}) .scene {

      @for $j from 1 through 9 {
        $y: ($j - 1) * $angle;
        $z: 0;

        &:nth-of-type(#{$j}) .shape {
          @include rotate($x, $y, $z);
        }

      }

    }
  }
}

.face1 .face[data-index='1'],
.face2 .face[data-index='2'],
.face3 .face[data-index='3'],
.face4 .face[data-index='4'],
.face5 .face[data-index='5'],
.face6 .face[data-index='6'] {
  opacity: 0;
}
